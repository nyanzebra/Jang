#pragma once

namespace jang {

#ifndef CHAR_BIT
#define CHAR_BIT 8
#endif
#ifndef SIGNED_CHAR_MIN
#define SIGNED_CHAR_MIN -128
#endif
#ifndef SIGNED_CHAR_MAX
#define SIGNED_CHAR_MAX 127
#endif
#ifndef UNSIGNED_CHAR_MAX
#define UNSIGNED_CHAR_MAX 255
#endif
#ifndef CHAR_MIN
#define CHAR_MIN SIGNED_CHAR_MIN
#endif
#ifndef CHAR_MAX
#define CHAR_MAX SIGNED_CHAR_MAX
#endif
#ifndef MULTIBYTE_CHAR_LENGTH_MAX
#define MULTIBYTE_CHAR_LENGTH_MAX 4
#endif
#ifndef SHORT_MIN
#define SHORT_MIN -32'768
#endif
#ifndef SHORT_MAX
#define SHORT_MAX 32'767
#endif
#ifndef UNSIGNED_SHORT_MAX
#define UNSIGNED_SHORT_MAX 65'535
#endif
#ifndef INT_MIN
#define INT_MIN -2'147'483'648
#endif
#ifndef INT_MAX
#define INT_MAX 2'147'483'647
#endif
#ifndef UNSIGNED_INT_MAX
#define UNSIGNED_INT_MAX 4'294'967'295
#endif
#ifndef LONG_MIN
#define LONG_MIN -9'223'372'036'854'775'808
#endif
#ifndef LONG_MAX
#define LONG_MAX 9'223'372'036'854'775'807
#endif
#ifndef UNSIGNED_LONG_MAX
#define UNSIGNED_LONG_MAX UNSIGNED_INT_MAX
#endif
#ifndef LONG_LONG_MIN
#define LONG_LONG_MIN LONG_MIN
#endif
#ifndef LONG_LONG_MAX
#define LONG_LONG_MAX LONG_MAX
#endif
#ifndef UNSIGNED_LONG_LONG_MAX
#define UNSIGNED_LONG_LONG_MAX 18'446'744'073'709'551'615
#endif

#if defined(__clang__)		    
#define CLANG_CODE(code) code
#define GNU_CODE(code)
#define WINDOWS_CODE(code)
#elif defined(__GNUC__) || defined(__GNUG__) 	    
#define CLANG_CODE(code)
#define GNU_CODE(code) code
#define WINDOWS_CODE(code) 
#elif defined(_MSC_VER)	 	    
#define CLANG_CODE(code) 
#define GNU_CODE(code)
#define WINDOWS_CODE(code) code
#endif

#ifndef OVERRIDE_DEFAULT_ARCHITECTURE
	#if _WIN32 || _WIN64
		#if _WIN64
		#define SYSTEM_ARCHITECTURE 64
		#else
		#define SYSTEM_ARCHITECTURE 32
		#endif
	#endif

	#if __GNUC__
		#if __x86_64__ || __ppc64__
		#define SYSTEM_ARCHITECTURE 64
		#else
		#define SYSTEM_ARCHITECTURE 32
		#endif
	#endif
#elif
	#if defined(SYSTEM_ARCHITECTURE_8_BIT)
	#define SYSTEM_ARCHITECTURE 8
	#elif defined(SYSTEM_ARCHITECTURE_16_BIT)
	#define SYSTEM_ARCHITECTURE 16
	#elif defined(SYSTEM_ARCHITECTURE_32_BIT)
	#define SYSTEM_ARCHITECTURE 32
	#elif defined(SYSTEM_ARCHITECTURE_64_BIT)
	#define SYSTEM_ARCHITECTURE 64
	#elif defined(SYSTEM_ARCHITECTURE_128_BIT)
	#define SYSTEM_ARCHITECTURE 128
	#endif
#endif

#ifdef max
#undef max
#endif

#ifdef min
#undef min
#endif

#define CONCATENATE(a, b) a ## b
#define AS_STRING(a) #a

}